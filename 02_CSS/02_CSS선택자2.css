/* 230105 7교시 frontend 02_CSS 선택자 */


/* 외부 스타일 시트 */


/* * {
    color: green;
} */


/* 속성 선택자 */
/* div 중에 name 속성을 가지고 있는 태그 선택 */
    /* div[name] {
        background-color: orangered;
    } */


/* div 중에 name 속성을 가지고 있고 name 속성값이 name1과 일치하는 태그 선택 */
    /* 속성값이 완전 동일한 태그만 선택됨. div1만 선택되지 div3은 선택되지 않음 */
    div[name=name1] {
        background-color: orangered;
    }


/* div 중에 name 속성을 가지고 있고 name 속성값에 name1이 포함되어 있는 태그 선택 */
    /* name1이 포함되어있는 모든 태그 선택됨 div1, div3 선택.
        if) div3의 name이 'name3 name1'이 아니라 'name3name1'이면 선택되지 않음.
            띄어쓰기로 구분함. 붙어있으면 하나로 인식 */
    div[name~=name1] {
        background-color: yellow;
    }


/* div 중에 class 속성에서 속성값이 class로 시작되는 태그 선택(단, -로 구분) */
    /* div4가 바뀜
        if) div4의 클래스 속성값을 class-div에서 classdiv로 바꾸면 선택되지 않음. 반드시 -로 구분함 */
    div[class|=class] {
        background-color: aqua;
    }


/* div 중에 name 속성의 속성값이 name으로 시작되는 태그 선택 */
    div[name^=name] {
        background-color: blue;
    }


/*  div 중에 class 속성의 속성값이 div로 시작되는 태그 선택 */
    div[class^=div] {
        background-color: pink;
    }


/* div 중에 name 속성의 속성값이 2로 끝나는 태그 선택 */
    div[name$="2"] {    /* 하나의 값은 숫자로 인식을 하기 때문에 꼭 ""으로 묶어주기 */
        color: white;
    }


/* div 중에 class 속성의 속성값에 i를 포함하는 태그 선택 */
    div[class*=i] {
        background-color: greenyellow;
        color: red;
    }


/* div 중에 class 속성의 속성값이 div-class인 것 중에 name 속성의 속성값에 name3이 포함되어 있는 태그 선택
    단, 속성값은 띄어쓰기로 구분*/
    .div-class[name~=name3]{
        background-color: pink;
    }


    
/* 230106 1교시 frontend 02_CSS 선택자 */

/* 자손 선택자와 후손 선택자 */
/* 바로 하위 요소가 아닌 li태그 안의 h4는 선택되지 않음 */
#test1 > h4 {
    background-color: orange;
}

/* id가 test1인 요소의 바로 하위 요소인 ul 태그의 바로 하위 요소인 h4 선택 */
#test1 > ul > h4 {
    background-color: purple;
}

#test1 > ul > li {
    background-color: coral;
}

/* id가 test1인 요소 밑의 모든 li 태그 선택*/
#test1 li {
    background-color: aqua;         /*선택자 우선순위로 모든 요소가 선택되지 않는다. 후에 배움 이정도만 알아두기 */
    color: red;
}


/* 형제 선택자 */
/*test2라는 id를 가진 요소 선택*/
#test2 {
    background-color:  red;
}

/* 인접 형제 선택자 */
/*test2라는 id를 가진 요소의 바로 뒤 형제 div 요소 하나 선택*/
#test2 + div {
    background-color: greenyellow;
}

/* 형제 선택자 */
/*test2라는 id를 가진 요소의 뒤에 있는 모든 형제 div 요소 선택
    body 태그 안에 있는 모든 div 요소에 적용됨 고로 원활한 실습을 위해 주석 처리*/
/* #test2 ~ div {
    background-color: orangered;
    color: white;
} */



/* 230106 2교시 frontend 02_CSS 선택자 */
/* 반응 선택자 */

/* :active
    사용자가 클릭하는 요소의 스타일 지정 */
#active-test, #hover-test {             /*콤마로 여러 요소 지정 선택*/
    background-color: greenyellow;
    width: 300px;
    height: 300px;
}
#active-test:active {
    background-color: yellow;
    color: red;
}

/* :hover
    사용자가 마우스를 올리는 요소의 스타일 지정*/
#hover-test:hover {
    background-color: hotpink;
    color: white;
    cursor: pointer;                    /* cursor 속성의 pointer : 커서 모양이 손가락 모양으로 바뀜*/
}

/* :focus
    초점이 맞춰어진 요소의 스타일 지정*/
#userId:focus , #userPwd:focus{
    border: 2px solid red;
}



/* 상태 선택자 */

/* 1) :checked */
/* input 태그인데 type 속성 값이 checkbox인 태그들 선택 */
input[type=checkbox] {
    width: 10px;
    height: 10px;
}
/* input 태그인데 type 속성 값이 checkbox인 태그들 중 체크된 상태의 요소를 선택해 스타일 지정 */
input[type=checkbox]:checked {
    width: 20px;
    height: 20px;
}
/* 체크된 상태인 input 태그와 연결된 label을 선택해 스타일 지정
    인접 형제 선택자 사용 */
input[type=checkbox]:checked + label{
    font-size: 1.5em;
}



/* 230106 3교시 frontend 02_CSS 선택자 */

/* 상태 선택자 
    2) :enabled */
/* option 태그 중에서 사용이 가능한 요소를 선택해 스타일 지정*/
option:enabled {
    background-color: greenyellow;
}
/* button 태그 중에서 사용이 가능한 요소를 선택해 스타일 지정*/
button:enabled {
    background-color: yellowgreen;
}

/* 3) :disabled */
/* option 태그 중에서 사용이 불가능한 요소를 선택해 스타일 지정 */
option:disabled {
    background-color: violet;
    color: white;
}
/* button 태그 중에서 사용이 불가능한 요소를 선택해 스타일 지정*/
button:disabled {
    color: red;
}



/* 구조 선택자*/
/* id가 test3인 태그 하위의 모든 p 태그 */
/* #test3 p {
    background-color: red;
    color: white;
} */

/* 구조 선택자
      -child      */

/* 형제 관계 태그 중 첫 번째 태그 선택*/
/* div 태그의 자식 중 첫 번째 태그가 p여서 스타일이 적용됐는데
    첫 번째 태그가 p가 아녔다면 적용되지 않았을 것이다. */
#test3 p:first-child {
    background-color: red;
    color: white;
}

/* 형제 관계 태그 중 마지막 태그 선택*/
/*  -child 는 단순히 위치로 확인을 한다.
    div 태그의 자식 순서로 봤을 때 마지막 태그가 p 태그가 아니라 pre 태그여서 스타일이 적용되지 않음 */
#test3 p:last-child {
    background-color: orange;
    color: white;
}

/* 형제 관계 태그 중 앞에서 수열 번째 태그 선택 */
/* 수식을 사용하거나, 수식 대신 odd(홀수), even(짝수) 를 전달 할 수 있다. */
/* #test3 p:nth-child(2) {     두 번째 애를 바꾸기 */
/* #test3 p:nth-child(2n) {    짝수 애들 바꾸기 */
#test3 p:nth-child(even) {     /* 짝수 애들 바꾸기 */
    background-color: yellowgreen;
    color: white;
}

/* 형제 관계 태그 중 뒤에서 수열 번째 태그 선택 */
/* 테스트 3이 변경됨 p태그 중에 네 번째가 아니라 div태그의 하위 형제 관계 태그 중 밑에서 네 번째 태그를 선택하는 것*/
#test3 p:nth-last-child(4) {
    background-color: skyblue;
    color: white;
}



/* 구조 선택자
      -of-type      */

      /* -of-type 실습하면서 테스트0 div 태그를 주석 풀고 묶어보면서 어떻게 바뀌나 봐보기 */
/* 형제 관계 태그 중 첫 번째 태그 선택 */
/* 단순 위치로 구분이 아니라 태그 별로 구분을 하기 때문에 첫 번째 p태그를 선택*/
#test4 p:first-of-type {
    background-color: red;
    color: white;
}

/* 형제 관계 태그 중에서 마지막 태그 선택*/
/* 모든 형제 관계 중 마지막 태그(pre태그 테스트6)가 아니라 마지막 p태그(테스트5) 선택 */
#test4 p:last-of-type {
    background-color: orange;
    color: white;
}

/* 형제 관계 태그 중 앞에서 수열 변째 태그 선택 */
#test4 p:nth-of-type(2n) {
    background-color: yellowgreen;
    color: white;
}

/* 형제 관계 태그 중 뒤에서 수열 번째 태그 선택 */
/* 테스트 2이 변경됨 p태그 중에 네 번째가 태그를 선택하는 것*/
#test4 p:nth-last-of-type(4) {
    background-color: skyblue;
    color: white;
}



/* 230106 4교시 frontend 02_CSS 선택자 */

/* 문자 선택자 */
/*  선택자::first-letter    : 첫 번째 글자를 선택해서 스타일을 적용 */
#test5 p::first-letter {
    font-size: 2em;
}

/*  선택자::first-line      : 첫 번째 라인을 선택해서 스타일을 적용 */
#test5 p::first-line {
    background-color: beige;
}

/*  선택자::before          : 요소 내용 앞에 위치하는 공간을 선택 */
#test5 p::before {
    content: '1. ';
}

/*  선택자::after           : 요소 내용 뒤에 위치하는 공간을 선택 */
#test5 p::after {
    content: "@@@@@@@@";
    font-size: 2em;
}

/*  ::selection             : 사용자가 드래그한 글자 선택 */
#test5 p::selection {
    background-color: tomato;
    color: beige;
}



/* 부정 선택자 */
/* 앞에서 배운 모든 선택자를 not() 괄호 안에 넣을 수 있음 */
/* id가 test6인 요소의 모든 하위 p 태그 선택 */
/* #test6 p {
    background-color: chocolate;
} */

/* #test6 p:not(.classname) {
    background-color: chocolate;
} */

/* #test6 p:not(:last-child) {
    background-color: chocolate;
} */

#test6 p:not(:nth-child(even)) {
    background-color: chocolate;
}